name: Auto Create Pull Request
on:
  create:
  push:
    branches-ignore:
      - main
jobs:
  create-pull-request:
    name: "ðŸ”„ Create PR for ${{ github.ref_name }}"
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get branch name
        id: branch
        run: |
          echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
      
      - name: Check if PR already exists
        id: check_pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH="${{ steps.branch.outputs.branch }}"
          PR_EXISTS=$(gh pr list --head "$BRANCH" --base main --json number --jq 'length')
          echo "exists=$PR_EXISTS" >> $GITHUB_OUTPUT
      
      - name: Create or Update PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH="${{ steps.branch.outputs.branch }}"
          
          # Get full commit messages with titles, bodies, and timestamps
          COMMIT_MESSAGES=$(git log origin/main..$BRANCH --pretty=format:"## %s (%h) - %ad%n%n%b%n%n---" --date=format:'%Y-%m-%d %H:%M:%S' --reverse)
          
          # Create PR description with all commit messages
          cat > pr_body.txt << EOF
          This pull request was automatically created when branch $BRANCH was pushed.

          **Generated:** $(date '+%Y-%m-%d %H:%M:%S UTC')

          ## All Commits in this PR:
          $COMMIT_MESSAGES
          EOF
          
          if [ "${{ steps.check_pr.outputs.exists }}" = "0" ]; then
            # Create new PR
            gh pr create \
              --title "Auto PR: Merge $BRANCH into main" \
              --body-file pr_body.txt \
              --base main \
              --head "$BRANCH"
            echo "âœ… Created new PR with commit messages"
          else
            # Update existing PR with latest commit messages
            EXISTING_PR=$(gh pr list --head "$BRANCH" --base main --json number --jq '.[0].number')
            gh pr edit "$EXISTING_PR" --body-file pr_body.txt
            echo "âœ… Updated existing PR #$EXISTING_PR with all commit messages"
          fi
      
      - name: Workflow Completion Debug
        if: always()
        run: |
          echo "ðŸ”„ DEBUG: Auto Create Pull Request workflow completing"
          echo "ðŸ”„ DEBUG: Workflow status: ${{ job.status }}"
          echo "ðŸ”„ DEBUG: Should trigger dependent workflows now"