version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: axiom_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-axiom}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-axiom_password}
      POSTGRES_DB: ${POSTGRES_DB:-axiom_finance}
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=en_US.UTF-8"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-axiom}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - axiom_network
    restart: unless-stopped

  # PgAdmin for Database Management (Optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: axiom_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@axiom.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - axiom_network
    restart: unless-stopped
    profiles:
      - admin

  # Weaviate Vector Database (Self-hosted option)
  weaviate:
    image: semitechnologies/weaviate:1.24.1
    container_name: axiom_weaviate
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: 'text2vec-openai,text2vec-cohere,text2vec-huggingface'
      CLUSTER_HOSTNAME: 'node1'
    ports:
      - "${WEAVIATE_PORT:-8080}:8080"
    volumes:
      - weaviate_data:/var/lib/weaviate
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/v1/.well-known/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - axiom_network
    restart: unless-stopped
    profiles:
      - vector-db

  # ChromaDB Vector Database (Lightweight option)
  chromadb:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: axiom_chromadb
    environment:
      IS_PERSISTENT: 'TRUE'
      PERSIST_DIRECTORY: /chroma/chroma
      ANONYMIZED_TELEMETRY: 'FALSE'
    ports:
      - "${CHROMA_PORT:-8000}:8000"
    volumes:
      - chroma_data:/chroma/chroma
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - axiom_network
    restart: unless-stopped
    profiles:
      - vector-db-light

  # Redis for Caching (Optional)
  redis:
    image: redis:7-alpine
    container_name: axiom_redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-axiom_redis}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - axiom_network
    restart: unless-stopped
    profiles:
      - cache

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  weaviate_data:
    driver: local
  chroma_data:
    driver: local
  redis_data:
    driver: local

networks:
  axiom_network:
    driver: bridge