# Axiom Financial Data Services - Unified Docker Compose Configuration
# Consolidates MCP Servers and Provider Containers into a single system
# All environment variables loaded from project root .env file

# Location: axiom/integrations/data_sources/finance/docker-compose.yml
# Root .env: /Users/sandeep.yadav/work/axiom/.env

services:
  # ============================================================================
  # MCP SERVERS - Model Context Protocol Servers for AI Integration
  # ============================================================================
  
  # Official Polygon.io MCP Server - Real-time market data
  polygon-io-server:
    build:
      context: https://github.com/polygon-io/mcp_polygon.git
    container_name: axiom-polygon-financial-mcp
    environment:
      # Polygon.io API Configuration
      - POLYGON_API_KEY=${POLYGON_API_KEY}
      - POLYGON_API_ROTATION_ENABLED=${POLYGON_API_ROTATION_ENABLED:-false}
      
      # MCP Protocol Configuration
      - MCP_TRANSPORT=stdio
      
      # Financial Data Configuration
      - FINANCIAL_DATA_DEPTH=${FINANCIAL_DATA_DEPTH:-comprehensive}
      - DEBUG=${DEBUG:-false}
      
      # API Management
      - FINANCIAL_API_ROTATION_ENABLED=${FINANCIAL_API_ROTATION_ENABLED:-true}
    stdin_open: true
    tty: true
    restart: unless-stopped
    networks:
      - financial-data-network
    profiles:
      - "polygon"
      - "mcp"
    labels:
      - "axiom.service=external-financial-mcp"
      - "axiom.provider=polygon-io-official"
      - "axiom.type=real-time-market-data"
      - "axiom.cost=free-tier-premium-available"
    env_file:
      - ../../../../.env

  # Yahoo Finance Professional MCP - 27 professional financial tools (100% FREE)
  # DISABLED: yahoo-finance-professional (persistent Docker build issues)
  # Alternative: Use yahoo-finance-comprehensive (working) or deploy locally
  # yahoo-finance-professional:
  #   image: python:3.11-slim
  #   container_name: axiom-yahoo-professional-mcp
  #   working_dir: /app
  #   environment:
  #     - MCP_TRANSPORT=stdio
  #     - FINANCIAL_DATA_DEPTH=${FINANCIAL_DATA_DEPTH:-comprehensive}
  #     - DEBUG=${DEBUG:-false}
  #   command: |
  #     sh -c "
  #       apt-get update && apt-get install -y git curl && rm -rf /var/lib/apt/lists/* &&
  #       rm -rf /tmp/yahoo-mcp &&
  #       git clone https://github.com/gregorizeidler/MCP-yahoofinance-ai.git /tmp/yahoo-mcp &&
  #       cd /tmp/yahoo-mcp &&
  #       pip install --no-cache-dir -r requirements.txt &&
  #       pip install --no-cache-dir -e . &&
  #       python src/mcp_yahoo_finance/server.py
  #     "
  #   stdin_open: true
  #   tty: true
  #   restart: unless-stopped
  #   networks:
  #     - financial-data-network
  #   profiles:
  #     - "yahoo-pro"
  #     - "mcp"
  #   labels:
  #     - "axiom.service=external-financial-mcp"
  #     - "axiom.provider=yahoo-finance-professional"
  #     - "axiom.type=portfolio-risk-technical-analysis"
  #     - "axiom.cost=100-percent-free"
  #   env_file:
  #     - ../../../../.env

  # Yahoo Finance Comprehensive MCP - Detailed fundamental analysis (100% FREE)
  yahoo-finance-comprehensive:
    image: python:3.11-alpine
    container_name: axiom-yahoo-comprehensive-mcp
    working_dir: /app
    environment:
      - MCP_TRANSPORT=stdio
      - FINANCIAL_DATA_DEPTH=${FINANCIAL_DATA_DEPTH:-comprehensive}
      - DEBUG=${DEBUG:-false}
    command: |
      sh -c "
        apk add --no-cache git gcc musl-dev &&
        pip install uv &&
        rm -rf /tmp/yahoo-comp &&
        git clone https://github.com/Alex2Yang97/yahoo-finance-mcp.git /tmp/yahoo-comp &&
        cd /tmp/yahoo-comp &&
        uv venv && source .venv/bin/activate &&
        uv pip install -e . &&
        uv run server.py
      "
    stdin_open: true
    tty: true
    restart: unless-stopped
    networks:
      - financial-data-network
    profiles:
      - "yahoo-comp"
      - "mcp"
    labels:
      - "axiom.service=external-financial-mcp"
      - "axiom.provider=yahoo-finance-comprehensive"
      - "axiom.type=fundamental-research-analysis"
      - "axiom.cost=100-percent-free"
    env_file:
      - ../../../../.env

  # Official Firecrawl MCP Server - Fast web scraping and data extraction
  firecrawl-server:
    image: mcp/firecrawl
    container_name: axiom-firecrawl-mcp
    environment:
      - FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY}
      - MCP_TRANSPORT=stdio
      - DEBUG=${DEBUG:-false}
    stdin_open: true
    tty: true
    restart: unless-stopped
    networks:
      - financial-data-network
    profiles:
      - "firecrawl"
      - "mcp"
    labels:
      - "axiom.service=external-search-mcp"
      - "axiom.provider=firecrawl-official"
      - "axiom.type=web-scraping-data-extraction"
      - "axiom.cost=free-tier-premium-available"
    env_file:
      - ../../../.env

  # ============================================================================
  # PROVIDER CONTAINERS - REST API Financial Data Providers
  # ============================================================================

  # Tavily Search Provider - Financial search and M&A intelligence
  tavily-provider:
    build:
      context: ../../../
      dockerfile: axiom/integrations/data_sources/finance/provider_containers/tavily/Dockerfile
    container_name: axiom-tavily-provider
    environment:
      # Tavily Configuration
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - TAVILY_API_KEYS=${TAVILY_API_KEYS:-}
      - TAVILY_ROTATION_ENABLED=${TAVILY_ROTATION_ENABLED:-false}
      
      # Server Configuration
      - PORT=8001
      - DEBUG=${DEBUG:-false}
      
      # Global API Management
      - API_KEY_ROTATION_ENABLED=${API_KEY_ROTATION_ENABLED:-true}
    ports:
      - "8001:8001"
    restart: unless-stopped
    networks:
      - financial-data-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    profiles:
      - "tavily"
      - "providers"
    labels:
      - "axiom.service=financial-provider"
      - "axiom.provider=tavily"
      - "axiom.type=search-intelligence"
      - "axiom.cost=paid-tier"
    env_file:
      - ../../../../.env

  # Financial Modeling Prep (FMP) Provider - Comprehensive financial data
  fmp-provider:
    build:
      context: ../../../
      dockerfile: axiom/integrations/data_sources/finance/provider_containers/fmp/Dockerfile
    container_name: axiom-fmp-provider
    environment:
      # FMP Configuration
      - FINANCIAL_MODELING_PREP_API_KEY=${FINANCIAL_MODELING_PREP_API_KEY:-}
      - FMP_API_KEY=${FMP_API_KEY:-}
      
      # Server Configuration
      - PORT=8002
      - DEBUG=${DEBUG:-false}
      
      # Provider Settings
      - FINANCIAL_DATA_DEPTH=${FINANCIAL_DATA_DEPTH:-comprehensive}
      - FINANCIAL_API_ROTATION_ENABLED=${FINANCIAL_API_ROTATION_ENABLED:-true}
    ports:
      - "8002:8002"
    restart: unless-stopped
    networks:
      - financial-data-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    profiles:
      - "fmp"
      - "providers"
    labels:
      - "axiom.service=financial-provider"
      - "axiom.provider=fmp"
      - "axiom.type=comprehensive-financial-data"
      - "axiom.cost=free-tier-premium-available"
      - "axiom.free-tier=250-calls-per-day"
      - "axiom.premium=14-usd-per-month"
    env_file:
      - ../../../../.env

  # Finnhub Provider - Real-time market data and fundamentals
  finnhub-provider:
    build:
      context: ../../../
      dockerfile: axiom/integrations/data_sources/finance/provider_containers/finnhub/Dockerfile
    container_name: axiom-finnhub-provider
    environment:
      # Finnhub Configuration
      - FINNHUB_API_KEY=${FINNHUB_API_KEY:-}
      
      # Server Configuration
      - PORT=8003
      - DEBUG=${DEBUG:-false}
      
      # Provider Settings
      - FINANCIAL_DATA_DEPTH=${FINANCIAL_DATA_DEPTH:-comprehensive}
      - FINANCIAL_API_ROTATION_ENABLED=${FINANCIAL_API_ROTATION_ENABLED:-true}
    ports:
      - "8003:8003"
    restart: unless-stopped
    networks:
      - financial-data-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    profiles:
      - "finnhub"
      - "providers"
    labels:
      - "axiom.service=financial-provider"
      - "axiom.provider=finnhub"
      - "axiom.type=real-time-market-data"
      - "axiom.cost=free-tier-premium-available"
      - "axiom.free-tier=60-calls-per-minute"
      - "axiom.premium=7.99-usd-per-month"
    env_file:
      - ../../../../.env

  # Alpha Vantage Provider - Comprehensive financial data with generous FREE tier
  alpha-vantage-provider:
    build:
      context: ../../../
      dockerfile: axiom/integrations/data_sources/finance/provider_containers/alpha_vantage/Dockerfile
    container_name: axiom-alpha-vantage-provider
    environment:
      # Alpha Vantage Configuration
      - ALPHA_VANTAGE_API_KEY=${ALPHA_VANTAGE_API_KEY:-}
      
      # Server Configuration
      - PORT=8004
      - DEBUG=${DEBUG:-false}
      
      # Provider Settings
      - FINANCIAL_DATA_DEPTH=${FINANCIAL_DATA_DEPTH:-comprehensive}
      - FINANCIAL_API_ROTATION_ENABLED=${FINANCIAL_API_ROTATION_ENABLED:-true}
    ports:
      - "8004:8004"
    restart: unless-stopped
    networks:
      - financial-data-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    profiles:
      - "alpha-vantage"
      - "providers"
    labels:
      - "axiom.service=financial-provider"
      - "axiom.provider=alpha-vantage"
      - "axiom.type=comprehensive-financial-data"
      - "axiom.cost=free-tier-premium-available"
      - "axiom.free-tier=500-calls-per-day"
      - "axiom.premium=49-usd-per-month"
    env_file:
      - ../../../../.env

networks:
  financial-data-network:
    name: axiom-financial-data-unified
    driver: bridge

# ============================================================================
# UNIFIED FINANCIAL DATA ARCHITECTURE
# ============================================================================
#
# This consolidated docker-compose file merges two previously separate systems:
# 1. MCP Servers (Model Context Protocol) - For AI agent integration
# 2. Provider Containers (REST APIs) - For direct HTTP access
#
# ✅ Benefits of unified approach:
# 1. Single configuration file for all financial data services
# 2. Unified network for seamless inter-service communication
# 3. Consistent environment variable management from root .env
# 4. Simplified deployment and management
# 5. Reduced complexity and easier maintenance
# 6. Single management script for all services
#
# 🚀 Usage Instructions:
#
# 📊 Start ALL services:
#   cd axiom/integrations/data_sources/finance
#   docker-compose up -d
#
# 🎯 Start services by category:
#   docker-compose --profile mcp up -d         # All MCP servers
#   docker-compose --profile providers up -d   # All REST providers
#
# 🔧 Start specific services:
#   docker-compose --profile polygon up -d               # Polygon.io MCP
#   docker-compose --profile yahoo-pro up -d             # Yahoo Professional
#   docker-compose --profile tavily up -d                # Tavily Provider
#   docker-compose --profile fmp up -d                   # FMP Provider
#
# 🔄 Start multiple services:
#   docker-compose --profile polygon --profile fmp up -d
#   docker-compose --profile mcp --profile providers up -d  # Everything
#
# 🛑 Stop services:
#   docker-compose down
#
# 📋 View status:
#   docker-compose ps
#
# 📊 View logs:
#   docker-compose logs -f [service-name]
#
# 🔄 Update and rebuild:
#   docker-compose up --build --pull -d
#
# 📦 Service Categories:
#
# MCP SERVERS (Profile: mcp):
# - polygon-io-server         : Real-time market data (FREE: 5 calls/min)
# - yahoo-finance-professional: 27 professional tools (100% FREE)
# - yahoo-finance-comprehensive: Fundamental analysis (100% FREE)
# - firecrawl-server          : Web scraping (FREE tier available)
#
# PROVIDER CONTAINERS (Profile: providers):
# - tavily-provider    (8001): Search & intelligence (Paid)
# - fmp-provider       (8002): Financial data (FREE: 250 calls/day)
# - finnhub-provider   (8003): Market data (FREE: 60 calls/min)
# - alpha-vantage-provider (8004): Financial data (FREE: 500 calls/day)
#
# 📋 Environment Variables (from root .env):
#
# Required for MCP Servers:
# - POLYGON_API_KEY: Polygon.io API key (FREE at polygon.io)
# - FIRECRAWL_API_KEY: Firecrawl API key (FREE at firecrawl.dev)
#
# Required for Provider Containers:
# - TAVILY_API_KEY: Tavily API key (tavily.com)
# - FINANCIAL_MODELING_PREP_API_KEY or FMP_API_KEY: FMP key (FREE)
# - FINNHUB_API_KEY: Finnhub key (FREE)
# - ALPHA_VANTAGE_API_KEY: Alpha Vantage key (FREE)
#
# Optional (with defaults):
# - FINANCIAL_API_ROTATION_ENABLED: Enable API rotation (default: true)
# - FINANCIAL_DATA_DEPTH: comprehensive | basic (default: comprehensive)
# - DEBUG: true | false (default: false)
#
# 🔧 Configuration Management:
# All environment variables loaded from: /Users/sandeep.yadav/work/axiom/.env
# Single source of truth - no duplicate .env files needed
#
# 💰 Cost Analysis:
# FREE Tier Total: ~750+ calls/day across all providers
# Premium Total: ~$71/month for unlimited professional data
# vs Bloomberg Terminal: $2,000+/month (96%+ cost savings!)