# ðŸ”„ External Financial MCP Servers Configuration
# This file references external MCP servers without embedding them in our repository

version: '3.8'

services:
  # Official Polygon.io MCP Server - Build from external GitHub repo
  polygon-io-server:
    # Build directly from Polygon.io GitHub repository
    build:
      context: https://github.com/polygon-io/mcp_polygon.git
    container_name: axiom-polygon-financial-mcp
    environment:
      - POLYGON_API_KEY=${POLYGON_API_KEY}
      - MCP_TRANSPORT=stdio
    stdin_open: true
    tty: true
    restart: unless-stopped
    networks:
      - financial-mcp-network
    profiles:
      - "polygon"
    labels:
      - "axiom.service=external-financial-mcp"
      - "axiom.provider=polygon-io-official"
      - "axiom.update-strategy=external-github-build"

  # Yahoo Finance Professional MCP - Use npm/uv installation approach
  yahoo-finance-professional:
    image: node:18-alpine
    container_name: axiom-yahoo-professional-mcp
    working_dir: /app
    environment:
      - MCP_TRANSPORT=stdio
    command: |
      sh -c "
        apk add --no-cache git python3 py3-pip &&
        npm install -g @modelcontextprotocol/create-server &&
        git clone https://github.com/gregorizeidler/MCP-yahoofinance-ai.git /tmp/yahoo-mcp &&
        cd /tmp/yahoo-mcp &&
        pip install -r requirements.txt &&
        python server.py
      "
    stdin_open: true
    tty: true
    restart: unless-stopped
    networks:
      - financial-mcp-network
    labels:
      - "axiom.service=external-financial-mcp"
      - "axiom.provider=yahoo-finance-professional"
      - "axiom.update-strategy=dynamic-clone-and-run"

  # Yahoo Finance Comprehensive MCP - Use uv installation
  yahoo-finance-comprehensive:
    image: python:3.11-alpine
    container_name: axiom-yahoo-comprehensive-mcp
    working_dir: /app
    environment:
      - MCP_TRANSPORT=stdio
    command: |
      sh -c "
        apk add --no-cache git gcc musl-dev &&
        pip install uv &&
        git clone https://github.com/Alex2Yang97/yahoo-finance-mcp.git /tmp/yahoo-comp &&
        cd /tmp/yahoo-comp &&
        uv venv && source .venv/bin/activate &&
        uv pip install -e . &&
        uv run server.py
      "
    stdin_open: true
    tty: true
    restart: unless-stopped
    networks:
      - financial-mcp-network
    labels:
      - "axiom.service=external-financial-mcp"
      - "axiom.provider=yahoo-finance-comprehensive"
      - "axiom.update-strategy=dynamic-clone-and-run"

  # Official Firecrawl MCP Server - Fast web scraping and data extraction
  firecrawl-server:
    image: mcp/firecrawl
    container_name: axiom-firecrawl-mcp
    environment:
      - FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY}
      - MCP_TRANSPORT=stdio
    stdin_open: true
    tty: true
    restart: unless-stopped
    networks:
      - financial-mcp-network
    profiles:
      - "firecrawl"
    labels:
      - "axiom.service=external-search-mcp"
      - "axiom.provider=firecrawl-official"
      - "axiom.type=web-scraping-data-extraction"
      - "axiom.update-strategy=official-docker-image"

networks:
  financial-mcp-network:
    name: axiom-financial-mcp-external
    driver: bridge

# ðŸŽ¯ EXTERNAL MCP SERVER STRATEGY:
# 
# ðŸ”„ This approach solves the repository embedding problem:
# 1. Uses official Docker images when available (Polygon.io)
# 2. Dynamic installation from external repos (Yahoo Finance servers)
# 3. Always gets latest updates from upstream repositories
# 4. No git submodule complexity in our repository
# 5. Clean separation between our code and external dependencies
#
# ðŸš€ Usage:
#   docker-compose -f external_mcp_servers.yml up -d
#
# ðŸ’¡ Benefits:
# - No embedded external repositories
# - Automatic updates from upstream
# - Clean Axiom repository structure
# - Easy maintenance and updates
# - No git submodule issues