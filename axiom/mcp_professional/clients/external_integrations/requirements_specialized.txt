# Specialized MCP Servers Dependencies
# Install with: pip install -r requirements_specialized.txt

# ============================================
# Research & Knowledge MCP Servers
# ============================================

# arXiv Research MCP Server
arxiv>=2.1.0              # Official arXiv API wrapper
requests>=2.31.0          # For USPTO and patent APIs

# ============================================
# Code Quality MCP Servers
# ============================================

# Linting & Formatting
pylint>=3.0.0             # Python linter
black>=23.12.0            # Code formatter
isort>=5.13.0             # Import sorter
mypy>=1.8.0               # Static type checker
bandit>=1.7.6             # Security linter
ruff>=0.1.9               # Fast Python linter
radon>=6.0.1              # Complexity analyzer
vulture>=2.10             # Dead code detector
pydocstyle>=6.3.0         # Docstring style checker
autopep8>=2.0.4           # Auto PEP 8 formatter

# Testing Automation
pytest>=8.0.0             # Testing framework (already in main requirements)
pytest-cov>=4.1.0         # Coverage plugin (already in main requirements)
pytest-benchmark>=4.0.0   # Benchmarking plugin
hypothesis>=6.96.0        # Property-based testing
mutpy>=0.6.1              # Mutation testing
locust>=2.20.0            # Load testing

# ============================================
# ML Operations MCP Servers
# ============================================

# Model Serving
mlflow>=2.9.0             # ML lifecycle management
bentoml>=1.1.0            # Model serving framework
ray[serve]>=2.9.0         # Distributed model serving

# Additional ML dependencies
scikit-learn>=1.3.0       # For model compatibility
joblib>=1.3.0             # For model serialization
cloudpickle>=3.0.0        # Enhanced pickle

# ============================================
# Business Intelligence MCP Servers
# ============================================

# SQL Analytics
duckdb>=0.9.2             # Fast analytics database
pandas>=2.0.0             # Data manipulation (already in main)
scipy>=1.11.0             # Statistical functions
sqlalchemy>=2.0.0         # SQL toolkit (already in main)

# Data Visualization
plotly>=5.18.0            # Interactive plots
matplotlib>=3.8.0         # Static plots (already in main)
seaborn>=0.13.0           # Statistical visualization
kaleido>=0.2.1            # Static image export for plotly

# ============================================
# MCP Core Dependencies
# ============================================

# MCP SDK (Model Context Protocol)
mcp>=0.1.0                # MCP server SDK

# ============================================
# Optional Production Dependencies
# ============================================

# Monitoring (optional)
# prometheus-client>=0.19.0
# opentelemetry-api>=1.21.0

# Caching (optional)
# redis>=5.0.0
# pymemcache>=4.0.0

# Message Queue (optional)
# celery>=5.3.0
# kombu>=5.3.0

# ============================================
# Development Dependencies
# ============================================

# Testing
pytest-asyncio>=0.23.0    # Async test support
pytest-mock>=3.12.0       # Mocking support
faker>=22.0.0             # Fake data generation

# Type checking
types-requests>=2.31.0
types-setuptools>=69.0.0

# Documentation
sphinx>=7.2.0             # Documentation generator
sphinx-rtd-theme>=2.0.0   # ReadTheDocs theme

# ============================================
# Platform-Specific Notes
# ============================================

# Windows users may need:
# - Visual C++ Build Tools for some packages
# - Git for Windows

# macOS users may need:
# - Xcode Command Line Tools: xcode-select --install

# Linux users should have:
# - build-essential (Debian/Ubuntu)
# - gcc, make (RedHat/CentOS)

# ============================================
# Installation Instructions
# ============================================

# 1. Core specialized servers:
#    pip install -r requirements_specialized.txt

# 2. For development (includes testing):
#    pip install -r requirements_specialized.txt -r requirements-dev.txt

# 3. For production (minimal):
#    pip install arxiv>=2.1.0 pylint>=3.0.0 black>=23.12.0 duckdb>=0.9.2 mcp>=0.1.0

# 4. Verify installation:
#    python -c "import arxiv, pylint, duckdb, mcp; print('All imports successful')"

# ============================================
# Version Compatibility
# ============================================

# Python: 3.9, 3.10, 3.11, 3.12
# Tested on: Linux, macOS, Windows

# ============================================
# Known Issues
# ============================================

# - Ray[serve] may have issues on Windows
#   Solution: Use WSL2 or Docker
#
# - MLflow UI requires additional ports
#   Solution: Configure firewall rules
#
# - DuckDB may need C++ compiler
#   Solution: Install pre-built wheels

# ============================================
# Performance Notes
# ============================================

# For large-scale deployments, consider:
# - Using containerized deployments (Docker)
# - Distributed computing with Ray
# - Caching with Redis
# - Load balancing with Nginx/HAProxy