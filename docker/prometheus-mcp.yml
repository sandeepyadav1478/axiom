version: '3.8'

services:
  prometheus-mcp:
    image: prom/prometheus:latest
    container_name: axiom-prometheus-mcp
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-mcp-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - axiom-network
    restart: unless-stopped
    labels:
      - "axiom.service=prometheus-mcp"
      - "axiom.category=monitoring"

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: axiom-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus-mcp
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - axiom-network
    restart: unless-stopped
    labels:
      - "axiom.service=grafana"
      - "axiom.category=monitoring"

volumes:
  prometheus-mcp-data:
    driver: local
  grafana-data:
    driver: local

networks:
  axiom-network:
    external: true