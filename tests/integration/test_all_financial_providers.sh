#!/bin/bash
# Comprehensive Test for All Financial Data Providers
# Tests: Polygon, Yahoo Comp, Firecrawl (MCP) + Tavily, FMP, Finnhub, Alpha Vantage (REST)
# Location: tests/integration/test_all_financial_providers.sh

echo "üß™ Testing All 7 Financial Data Provider Containers"
echo "======================================================"
echo ""

# Test MCP Servers
echo "üì° MCP SERVERS (Model Context Protocol)"
echo "========================================"
echo ""

# Test 1: Polygon MCP
echo "1Ô∏è‚É£ Polygon.io MCP Server..."
if docker ps | grep -q axiom-polygon-financial-mcp; then
    RESULT=$(docker exec axiom-polygon-financial-mcp python -c "import os; print(os.getenv('POLYGON_API_KEY', 'MISSING')[:20])" 2>&1)
    if echo "$RESULT" | grep -q "MISSING"; then
        echo "‚ùå Polygon: API key not loaded"
    else
        echo "‚úÖ Polygon: Container running, API key loaded: ${RESULT}..."
    fi
else
    echo "‚ùå Polygon: Container not running"
fi
echo ""

# Test 2: Yahoo Comprehensive MCP  
echo "2Ô∏è‚É£ Yahoo Finance Comprehensive MCP..."
if docker ps | grep -q axiom-yahoo-comprehensive-mcp; then
    echo "‚úÖ Yahoo Comp: Container running"
    # Test yfinance library
    RESULT=$(docker exec axiom-yahoo-comprehensive-mcp sh -c 'cd /tmp/yahoo-comp && source .venv/bin/activate && python -c "import yfinance; print(\"yfinance OK\")"' 2>&1)
    if echo "$RESULT" | grep -q "yfinance OK"; then
        echo "‚úÖ Yahoo Comp: yfinance library accessible"
    else
        echo "‚ö†Ô∏è  Yahoo Comp: Library check inconclusive"
    fi
else
    echo "‚ùå Yahoo Comp: Container not running"
fi
echo ""

# Test 3: Firecrawl MCP
echo "3Ô∏è‚É£ Firecrawl MCP Server..."
if docker ps | grep -q axiom-firecrawl-mcp; then
    RESULT=$(docker exec axiom-firecrawl-mcp sh -c 'echo $FIRECRAWL_API_KEY' | head -c 20)
    if [ -n "$RESULT" ]; then
        echo "‚úÖ Firecrawl: Container running, API key loaded: ${RESULT}..."
    else
        echo "‚ö†Ô∏è  Firecrawl: Running but API key check failed"
    fi
else
    echo "‚ùå Firecrawl: Container not running"
fi
echo ""

# Test REST API Providers
echo "üåê REST API PROVIDERS"
echo "======================================================"
echo ""

# Test 4: Tavily (8001)
echo "4Ô∏è‚É£ Tavily Provider (8001)..."
HEALTH=$(curl -s http://localhost:8001/health 2>&1)
if echo "$HEALTH" | grep -q "healthy\|ok\|status"; then
    echo "‚úÖ Tavily: Health check passed"
    # Try search query
    SEARCH=$(curl -s -X POST http://localhost:8001/search \
      -H "Content-Type: application/json" \
      -d '{"query": "test", "max_results": 1}' 2>&1 | head -c 100)
    if [ -n "$SEARCH" ]; then
        echo "‚úÖ Tavily: API responding to queries"
    fi
else
    echo "‚ùå Tavily: Health check failed or not responding"
    echo "   Troubleshoot: docker logs axiom-tavily-provider"
fi
echo ""

# Test 5: FMP (8002)
echo "5Ô∏è‚É£ FMP Provider (8002)..."
HEALTH=$(curl -s http://localhost:8002/health 2>&1)
if echo "$HEALTH" | grep -q "healthy\|ok\|status"; then
    echo "‚úÖ FMP: Health check passed"
    QUOTE=$(curl -s http://localhost:8002/quote/AAPL 2>&1 | head -c 100)
    if [ -n "$QUOTE" ]; then
        echo "‚úÖ FMP: API responding to queries"
    fi
else
    echo "‚ùå FMP: Health check failed or not responding"
    echo "   Troubleshoot: docker logs axiom-fmp-provider"
fi
echo ""

# Test 6: Finnhub (8003)
echo "6Ô∏è‚É£ Finnhub Provider (8003)..."
HEALTH=$(curl -s http://localhost:8003/health 2>&1)
if echo "$HEALTH" | grep -q "healthy\|ok\|status"; then
    echo "‚úÖ Finnhub: Health check passed"
    QUOTE=$(curl -s http://localhost:8003/quote/AAPL 2>&1 | head -c 100)
    if [ -n "$QUOTE" ]; then
        echo "‚úÖ Finnhub: API responding to queries"
    fi
else
    echo "‚ùå Finnhub: Health check failed or not responding"
    echo "   Troubleshoot: docker logs axiom-finnhub-provider"
fi
echo ""

# Test 7: Alpha Vantage (8004)
echo "7Ô∏è‚É£ Alpha Vantage Provider (8004)..."
HEALTH=$(curl -s http://localhost:8004/health 2>&1)
if echo "$HEALTH" | grep -q "healthy\|ok\|status"; then
    echo "‚úÖ Alpha Vantage: Health check passed"
    QUOTE=$(curl -s http://localhost:8004/quote/AAPL 2>&1 | head -c 100)
    if [ -n "$QUOTE" ]; then
        echo "‚úÖ Alpha Vantage: API responding to queries"
    fi
else
    echo "‚ùå Alpha Vantage: Health check failed or not responding"
    echo "   Troubleshoot: docker logs axiom-alpha-vantage-provider"
fi
echo ""

echo "======================================================"
echo "üìä Test Summary"
echo "======================================================"
echo ""
echo "MCP Servers: Check logs with docker logs <container-name>"
echo "REST Providers: Health endpoints verified"
echo ""
echo "‚úÖ All 7 financial data providers tested for connectivity"